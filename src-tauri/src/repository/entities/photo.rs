//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "photo")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub id: String,
  pub full_path: String,
  pub file_name: String,
  pub file_extension: String,
  pub shot_at: String,
  pub camera_name: Option<String>,
  #[sea_orm(column_type = "Double", nullable)]
  pub aperture: Option<f64>,
  #[sea_orm(column_type = "Double", nullable)]
  pub focal_length: Option<f64>,
  #[sea_orm(column_type = "Double", nullable)]
  pub equvalent_focal_length: Option<f64>,
  pub iso: Option<i32>,
  pub lens_model: Option<String>,
  #[sea_orm(column_type = "Double", nullable)]
  pub exposure_time: Option<f64>,
  #[sea_orm(column_type = "Binary(BlobSize::Blob(None))", nullable)]
  pub preview_image: Option<Vec<u8>>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
